Server setup
============

Jabber server should be configured for:

0) service (external component) should be properly configured using password (no SASL). In this document we assume that you configure your service as name pubpresence.$domain$
1) JID pubpresence.$domain$ should be granted admin rights (to be able to issue admin commands, like user-stats)
2) pubsub component should allow our service to create and configure nodes

Jabber users should add pubpresence.$domain$ to their roster or it should be placed there by other ways

Client behaviour
================

Client which tries to use pubpresence service should do the following

0) ask for presence status of pubpresence.$domain$ if it is online than pubpresence node contents is uptodate
1) subscribe on pubpresence node and keep all evence you'll receive there,do not process them
2) fetch all items from pubpresence, that's the current state of users connections
3) now you could process all collected from 1) items and further events on pubpresence node

This sequence should not be violated to avoid small race condition when you fetche all items and only then subscribe on new ones.

Please note that events you received on 1) rarely could be similair to state of users you get in 2)

If you receive purge notification it mean that pubpresence service was just started/restarted on now it's populated node with items again

Alose please note that inial state discovery of users presence could be inaccurate if mulitple connections are allowed and multiple non-away user connections found


Reference
=========

Created nodes
-------------

We create these nodes:
 * pupresence - always uptodate list with all users statuses (persisten node)

Published userinfo items
------------------------

On pubsub nodes we publish items with this content (<item> tag is part of pubsub standart)::
<item id='name@domain'><user status='online' ip='ip_addr' hostname='hostname' name='name@domain' fulljid='name@domain/resource'/></item>

Where status could be one of:
 * online - plain online
 * dnd - do nod distrib
 * away - away
 * xa - really away
 * chat - ready for chat
 
 Updates to user state are published under same item ID.
     
Presence responses
------------------
Any time you like you could probe for service presence, if service is ok it will response with
standart presence stanza
    